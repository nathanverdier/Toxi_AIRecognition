kind: pipeline
type: docker
name: CI_Toxi_IARecognition

trigger:
  event:
    - push

steps:
  # - name: get-images
  #   image: python:3.8
  #   commands:
  #     - apt-get update
  #     - apt-get install -y cmake
  #     - pip install -r requirements.txt
  #     - python getImagesApi.py

  # - name: build
  #   image: python:3.8
  #   commands:
  #     - cd codeIA
  #     - python3 mainIA.py Images/Remi.jpg
  #   depends_on: [get-images]

  # - name: test
  #   image: python:3.8
  #   commands:
  #     - npm test
  #   depends_on: [build]

  - name: code-inspection_sonar
    image: python:3.8
    environment:
      SONAR_TOKEN:
        from_secret: Login_Sonar_Toxi_AIRecognition
    settings:
      sources: .
    commands:
      - export SONAR_SCANNER_VERSION=4.7.0.2747
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"
      - sonar-scanner -X -D sonar.projectKey=toxiAIRecognition -D sonar.host.url=https://codefirst.iut.uca.fr/sonar
    # depends_on: [test]

    

# ---

kind: pipeline
type: docker
name: CD_Toxi_IARecognition

trigger:
  branch:
    - master
  event:
    - push


# steps:
#   - name: docker-build-and-push
#     image: plugins/docker
#     settings:
#        dockerfile: Dockerfile
#        context: .
#        registry: hub.codefirst.iut.uca.fr
#        repo: hub.codefirst.iut.uca.fr/nathan.verdier/toxic-api
#        username:
#          from_secret: 
#        password:
#          from_secret: 